plugins {
    id "java"
    id "application"
    id "checkstyle"
    id "jacoco"
    id "com.github.spotbugs" version "4.2.3"

}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.formdev:flatlaf:1.3'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'
    implementation 'com.google.code.gson:gson:2.8.7'
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
    testImplementation group: 'org.mockito', name: 'mockito-all', version: '2.0.2-beta'
    testImplementation 'org.mockito:mockito-inline:3.7.7'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.7.7'
}

application {
    mainClass = 'client.Main'
    mainClass = 'server.Server'
}



task clientJar(type: Jar) {
    dependsOn compileJava

    archiveBaseName = "client"
    from(sourceSets.main.output) {
        include "**"
    }

    manifest {
        attributes(
                'Main-Class': 'client.Main'
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task serverJar(type: Jar) {
    dependsOn compileJava

    archiveBaseName = "server"
    from(sourceSets.main.output) {
        include "**"
    }

    manifest {
        attributes(
                'Main-Class': 'server.Server'

        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}


task jar(type: Jar, overwrite: true) {
    dependsOn clientJar, serverJar
    actions = []
}

checkstyle {
    toolVersion '8.43'
    maxWarnings = 0
}

spotbugsMain {
    reports {
        html {
            enabled = true
        }
        xml {
            enabled = false
        }
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}


jacocoTestReport {
    dependsOn test
    finalizedBy jacocoTestCoverageVerification
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = "BRANCH"
                value = "COVEREDRATIO"
                minimum = 0.1
            }
        }
    }
}
